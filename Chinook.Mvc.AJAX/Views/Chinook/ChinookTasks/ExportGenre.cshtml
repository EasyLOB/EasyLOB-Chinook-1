@model TaskModel

<h3>@TaskExportGenreResources.Task</h3>

@{
    AjaxOptions ajaxOptions = new AjaxOptions()
    {
        HttpMethod = "POST",
        OnFailure = "ajaxFailure",
        OnSuccess = "ajaxSuccess"
    };
}

@using (Ajax.BeginForm("ExportGenre", "ChinookTasks", ajaxOptions))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="z-formButtons">
        <input type="image" class="btn btn-default z-buttonOk" title="@PresentationResources.OK" />
    </div>
}

<div id="OperationResult">
    @Html.OperationResult(Model.OperationResult)
</div>

<script>
    $(function () {
        try {
            //var model = function () { return @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model)); }();
        } catch (exception) {
            alert(zExceptionMessage("ExportGenre.cshtml", "function()", exception));
        }
    });

    function ajaxFailure(jqXHR, textStatus, errorThrown) {
        try {
            $("#OperationResult").html(zAjaxOperationResult(jqXHR));
        } catch (exception) {
            zExceptionMessage("ExportGenre.cshtml", "ajaxFailure(jqXHR, textStatus, errorThrown)", exception.message)
        }
    }

    function ajaxSuccess(data, textStatus, jqXHR) {
        try {
            $("#OperationResult").html(zAjaxOperationResult(jqXHR));

            if (data != null) {
                window.location = "@Url.Content("~/ChinookTasks/Download")" + "?FilePath=" + escape(data);
            }
        } catch (exception) {
            zExceptionMessage("ExportGenre.cshtml", "ajaxSuccess(data, textStatus, jqXHR)", exception.message)
        }
    }
</script>